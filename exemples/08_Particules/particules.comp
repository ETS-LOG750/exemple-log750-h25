#version 460

layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

struct Particle{
    vec3 position;
    float life;
    vec3 velocity;
    float size;
    vec3 color;
    float _pad;
};

layout(binding = 0, std430) buffer ssbo1 {
    Particle data[];
};

layout(binding = 1, std430) buffer ssbo2 {
    Particle spawn[];
};

layout( location = 0 ) uniform float dt;
layout( location = 1 ) uniform vec3 gravity;

void main() {
    uint index = gl_GlobalInvocationID.x;
    if (index >= data.length()) {
        return;
    }

    Particle p = data[index];
    p.life -= dt;
    if (p.life <= 0.0) {
        p = spawn[index];
    } else {
        p.position += p.velocity * dt;
        p.velocity += gravity * dt;
    }
    
    data[index] = p;
}